name: Construcción y despliegue de una aplicación MVC a Azure

env:
  AZURE_WEBAPP_NAME: upt-awa-820  # Nombre de la aplicación
  DOTNET_VERSION: '8'             # Versión de .NET

on:
  push:
    branches: [ "main" ]
    paths:
      - 'src/**'
      - 'infra/**'  # Se agrega la carpeta infra para detectar cambios en Terraform
      - '.github/workflows/**'
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  id-token: write  # Habilitar permisos de id-token

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout del código'
        uses: actions/checkout@v4

      - name: 'Escaneo de Terraform con Trivy'
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          scan-ref: './infra'
          severity: 'HIGH,CRITICAL'

  build:
    runs-on: ubuntu-latest
    needs: scan  # Asegura que el escaneo se ejecute antes de compilar
    steps:
      - uses: actions/checkout@v4

      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: 'Build Inventory Image'
        run: |
          docker build ./src --tag ghcr.io/jeanvalverde24/shorten:${{ github.sha }}
          docker push ghcr.io/jeanvalverde24/shorten:${{ github.sha }}

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: 'Login to Azure'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Set SENDGRID_API_KEY environment variable'
        run: echo "SENDGRID_API_KEY=${{ secrets.SENDGRID_API }}" >> $GITHUB_ENV

      - name: 'Desplegar a Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: ghcr.io/jeanvalverde24/shorten:${{ github.sha }}

  sync_mirror:
    runs-on: ubuntu-latest
    needs: build  # Se ejecuta después de la compilación
    steps:
      - name: 'Checkout del código principal'
        uses: actions/checkout@v4

      - name: 'Configurar git'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: 'Clonar repositorio espejo'
        run: |
          git clone https://JeanValverde24:${{ secrets.GHCR_PAT }}@github.com/JeanValverde24/pwebii_rec_u2_1_lab_mirror.git mirror_repo
          rsync -av --delete src/ mirror_repo/src/
          cd mirror_repo
          git add .
          git commit -m "Sync src/ from main repo to mirror" || echo "No changes to commit"
          git push origin main
